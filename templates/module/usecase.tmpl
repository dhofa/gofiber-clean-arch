package usecase

import (
 "{{.ModuleImport}}/internal/domain"
 "{{.ModuleImport}}/internal/entity"
)

type {{.PascalName}}Usecase struct {
 repo domain.{{.PascalName}}Repository
}

func New{{.PascalName}}Usecase(r domain.{{.PascalName}}Repository) domain.{{.PascalName}}Usecase {
 return &{{.PascalName}}Usecase{r}
}

func (u *{{.PascalName}}Usecase) GetAll() ([]entity.{{.PascalName}}, error) {
 return u.repo.FindAll()
}

func (u *{{.PascalName}}Usecase) GetByID(id uint) (*entity.{{.PascalName}}, error) {
 return u.repo.FindByID(id)
}

func (u *{{.PascalName}}Usecase) Create(data *entity.{{.PascalName}}) error {
 return u.repo.Create(data)
}

func (u *{{.PascalName}}Usecase) Update(data *entity.{{.PascalName}}) error {
 return u.repo.Update(data)
}

func (u *{{.PascalName}}Usecase) Delete(id uint) error {
 return u.repo.Delete(id)
}